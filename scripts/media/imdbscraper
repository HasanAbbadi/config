#!/bin/sh

__cleanup(){
    rm links.tmp 2>/dev/null
    rm page.html 2>/dev/null
    rm img.png 2>/dev/null

    killall ueberzug
}

trap __cleanup EXIT

ueberzug_preview(){
	screen_width=$(echo $COLUMNS)
	if [[ $screen_width -lt 92 ]]; then
		image_position=`expr $screen_width - 20`
	else
		image_position=`expr $screen_width - 30`
	fi
	ueberzug layer --parser bash 0< <(
	    declare -Ap add_command=([action]="add" [identifier]="example0" [x]="$image_position" [y]="20" [path]="$1")
	    sleep 1h
	    declare -Ap remove_command=([action]="remove" [identifier]="example0")
   )
}

# Scrap IMDB
QUERY=$(echo $1 | sed 's/\ /%20/g')
URL="https://www.imdb.com/find?q=$QUERY&s=tt&ref_=fn_al_tt_mr"

# The list of choices [Titles]
echo "=========================="
curl $URL 2>/dev/null | pup ".findList" | grep '/title/tt' -A3 | grep -v '[[:space:]]*<.*>\|^--' | paste - - | cat --number | head -n25

# List of links [hidden]
(curl $URL 2>/dev/null | pup ".findList" | grep '/title/tt' -A1  | grep '<a href' | uniq | cat --number > links.tmp) &

echo "--------------------------"
echo -n "Choose a Title: "
read NUM

# Wait till the links load
until [[ ! -z $(cat links.tmp) ]]; do
	echo "That was too fast, please try again."
	echo -n "Choose a Title: "
	read NUM
done

# If Choice was an invalid number ex.[a] or an out of range number.
LWN=$(grep "^[[:space:]]*$NUM[[:space:]]" links.tmp)
until [[ ! -z $LWN ]]; do
	echo "$NUM is an invalid number, please try again."
	echo -n "Choose a Title: "
	read NUM
	LWN=$(grep "^[[:space:]]*$NUM[[:space:]]" links.tmp)
done

# Chosen Link
LWoN=$(sed "s/^[[:space:]]*$NUM[[:space:]]*//g" <<< $LWN)
LINK=$(cut -d'"' -f2 <<< $LWoN | sed 's+^+https://www.imdb.com+g')

# Download html page of show
wget -O page.html $LINK 2>/dev/null

# Get Details from page
Title=$(cat page.html | pup '.title_wrapper > h1:nth-child(1) text{}')
Score=$(cat page.html | pup '.ratingValue > strong:nth-child(1) > span:nth-child(1) text{}')
Details=$(sed 's/></\ /g' page.html | grep 'See more release dates' | cut -d '>' -f2)
Synopsis=$(cat page.html | pup '.summary_text text{}')
IMG=$(sed 's/></\n/g' page.html | grep '<img alt' -A1 | awk '{FS="\""}/[Pp]oster/{getline;print$2}')

# Use ueberzug if installed
if [[ -f /bin/ueberzug ]]; then
	wget -O img.png $IMG 2>/dev/null
	ueberzug_preview img.png &
fi

# Output
echo "=========================="
echo -n '|'
echo Title: $Title
echo "--------------------------"
echo -n '|'
echo Score: $Score
echo "--------------------------"
echo -n '|'
echo Details: $Details
echo "--------------------------"
echo -n '|'
echo Story: $Synopsis | fold -w $(expr $(echo $COLUMNS) - 10)
echo "=========================="

# Trailer prompt
echo -n "Watch the trailer? (Y/n): "
read ANSWER
if [[ $ANSWER == [Yy] ]] || [[ -z $ANSWER ]];then
	YT_QUERY=$(echo $Title | sed 's/[()<>]//g' | sed 's/\ /+/g')
	YT_URL="https://www.youtube.com/results?search_query=$YT_QUERY+Official+Trailer"
	mpv $(curl $YT_URL 2>/dev/null | sed 's/></>\n</g' | sed 's/:{/:\n{/g' | grep '/watch?' | head -n2 | tail -n1 | cut -d'"' -f4 | sed 's+^+https://www.youtube.com+g')
else
	exit
fi

rm links.tmp
rm page.html
rm img.png 2>/dev/null
