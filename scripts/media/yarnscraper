#!/bin/sh

__cleanup(){
	rm yarn.tmp 2>/dev/null
	rm choice.tmp 2>/dev/null
	rm links.tmp 2>/dev/null
}

trap __cleanup EXIT

QUERY=$(echo $1 | sed 's/\ /%20/g')
URL="https://yarn.co/yarn-find?text=$QUERY"

wget -O yarn.tmp "$URL" 2>/dev/null

while true;do
	clear
	if [[ -z $__CHOICE ]];then
		echo "-----------------------------------------------------"
	else
		echo -e "Here is the link to the video you just watched:\n$vid_url"
		echo "-----------------------------------------------------"
	fi
	cat --number <<< $(paste <(cat yarn.tmp | pup '.title text{}') <(cat yarn.tmp | pup '.transcript text{}') | awk -v FS='\t' '{printf("%-70s %s\n",$1,$2)}') | tee choice.tmp
	echo -n "Pick one (press q to quit): "
	read CHOICE

	if [[ $CHOICE == "q" ]]; then
		echo "quitting..." && exit
	fi

	(cat --number <<< $(cat yarn.tmp | pup 'a' | grep 'yarn-clip' | cut -d '"' -f2 | sed 's+^+https://yarn.co+g')) > links.tmp

	my_CHOICE=$(grep "^[[:space:]]*$CHOICE[[:space:]]" links.tmp)
	__CHOICE=$(echo $my_CHOICE | sed 's/^[0-9]*[[:space:]]//g')
	vid_url=$(curl $__CHOICE 2>/dev/null | pup '.realsource' | cut -d'"' -f2)
	mpv --really-quiet --loop-file=inf $vid_url
done

rm yarn.tmp
rm choice.tmp
rm links.tmp
